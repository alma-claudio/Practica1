# -*- coding: utf-8 -*-
"""Practica1ABD

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1rf53jrjSIhYMOV9_bzXNbo8SazlqStoW

#                              **Práctica 1**

## **Ecosistema de un Administrador de Bases de datos y creación de una API**

**Material Utilizado:**

**Una máquina virtual de AWS con una IP publica, sistema operativo Linux (ubuntu 18.04), memoria 8 GiB memory.**
"""

from IPython.display import Image
Image('/content/i.jpg')

"""**La maquina debe tener habilitado el puerto 3000**

**Desde simbolo de sistema se accedio a la maquina virtual.**

### Ya en la maquina virtual desde consola actualizamos los paquetes:
"""

sudo apt-get update

"""**Instalamos NodeJs**"""

sudo apt-get install nodejs

"""**Instalamos el gestor de paquetes de NodeJs**"""

sudo apt-get install npm

"""**Instalamos el generador de aplicaciones Express**"""

sudo npm install express-generator@4 -g

"""**Desde cosnola instalamos PostgreSQL**"""

sudo apt install postgresql postgresql-contrib

"""**Ingresamos al súperusuario postgres**"""

sudo -i -u postgres

"""**Abrimos PostgreSQL**"""

psql

"""**Salir de PostgreSQL**"""

\q

"""### Creamos un rol para PostgreSQL:

**Seguimos en el súperusuario**
"""

sudo -u postgres createuser --interactive

"""### Creamos una base de datos (user)

**Seguimos en el súperusuario**
"""

sudo -u postgres createdb test

"""### Creamos un nuevo proyecto"""

cd /home

sudo mkdir practicas

cd practicas

sudo express practica_01

cd practica_01

"""Contedido: ls -la"""

sudo npm install

"""**Iniciamos el servidor **"""

sudo npm start

localhost:3000/

from IPython.display import Image
Image('/content/I1.jpg')

"""**Desde consola nos muestra los accesos al servido:**"""

from IPython.display import Image
Image('/content/I2.jpg')

from IPython.display import Image
Image('/content/I3.jpg')

"""### Regresando a el súperusuario

**Instalamos pg-promise**
"""

sudo npm install pg-promise@5 --save

"""**Instalamos bluebird**"""

sudo npm install bluebird@3 --save

"""### Nos posicionamos en en proyecto"""

cd /home

cd practicas

cd practica_01

"""**Creamos un archivo llamado queries.js**"""

sudo nano queries.js

var promise = require('bluebird');

var options = {
// Initialization Options
promiseLib: promise
};

var pgp = require('pg-promise')(options); //Instancia de pg-promise
var connectionString = 'postgres://localhost:5432/puppies';
var db = pgp({
        host: 'localhost',
        port: 5432,
        database: 'puppies',
        user: 'postgres',
        password: 'postgres'
});


// add query functions

module.exports = {
  getAllPuppies: getAllPuppies,
  getSinglePuppy: getSinglePuppy,
  createPuppy: createPuppy,
  updatePuppy: updatePuppy,
  removePuppy: removePuppy
};

"""ctrl + x

Guardar

### Creamos la base de datos

**Creamos un archivo llamado puppies.sql**
"""

sudo nano puppies.sql

DROP DATABASE IF EXISTS puppies;
CREATE DATABASE puppies;

\c puppies;

CREATE TABLE pups (
  ID SERIAL PRIMARY KEY,
  name VARCHAR,
  breed VARCHAR,
  age INTEGER,
  sex VARCHAR
);

INSERT INTO pups (name, breed, age, sex)
  VALUES ('Tyler', 'Retrieved', 3, 'M');

"""ctrl + x

Guardar

**Corremos el sql**
"""

sudo -u postgres psql -f puppies.sql

"""**Revisamos que tenga datos la base de datos**"""

sudo -u postgres psql

\l

\c puppies

\dt

select * from pups;

from IPython.display import Image
Image('/content/I4.jpg')

"""### Configuramos rutas

**Ir a routes**
"""

cd routes/

"""**Editamos el archivo /routes/index.js**"""

sudo nano index.js

Añadir funciones/queries al archivo /queries.js

var express = require('express');
var router = express.Router();

var db = require('../queries');


router.get('/api/puppies', db.getAllPuppies);
router.get('/api/puppies/:id', db.getSinglePuppy);
router.post('/api/puppies', db.createPuppy);
router.put('/api/puppies/:id', db.updatePuppy);
router.delete('/api/puppies/:id', db.removePuppy);


module.exports = router;

"""ctrl + x

Guardar

**Instalamos Forever**
"""

sudo npm install -g forever

"""**Usar Forever en el proyecto**"""

sudo forever start bin/www

"""### POSTMAN

**Método POST**
"""

function createPuppy(req, res, next) {
  req.body.age = parseInt(req.body.age);
  db.none('insert into pups(name, breed, age, sex)' +
      'values(${name}, ${breed}, ${age}, ${sex})',
    req.body)
    .then(function () {
      res.status(200)
        .json({
          status: 'success',
          message: 'Inserted one puppy'
        });
    })
    .catch(function (err) {
      return next(err);
    });
}

curl --data "name=Whisky&breed=annoying&age=3&sex=f" \
http:// ec2-54-88-247-160.compute-1.amazonaws.com:3000/api/puppies

